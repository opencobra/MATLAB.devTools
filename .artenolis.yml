language: bash

before_install:
    - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi

    # set the environment variable CURRENT_DIR
    - CURRENT_DIR=`pwd`;

    # remove the cloned repository even after failure
    - rm -rf $ARTENOLIS_DATA_PATH/repos/MATLAB.devTools.CI;

    # change to the current directory
    - cd $CURRENT_DIR;

script:
    # set the environment variable CURRENT_DIR
    - CURRENT_DIR=`pwd`;

    # change to the current directory
    - cd $CURRENT_DIR;

    # before launching the tests, make sure that the upstream repository is changed
    - cd $ARTENOLIS_DATA_PATH/repos/;
    - rm -rf MATLAB.devTools.CI;
    - git clone git@github.com:LCSB-BioCore/MATLAB.devTools.CI.git;
    - cd MATLAB.devTools.CI;
    - git remote -v;
    - eval "$(ssh-agent -s)";
    - ssh-add ~/.ssh/id_rsa;
    - git checkout develop;
    - fileName=$(awk 'BEGIN {srand(); print srand()}');
    - touch $fileName.txt;
    - git add $fileName.txt;
    - git commit -m "Adding "$fileName".txt from CI";
    - git push origin develop;
    - git checkout master;
    - git merge develop;
    - git push origin master;
    - git checkout develop;
    - git rm $fileName.txt;
    - git commit -m "Removing "$fileName".txt from CI";
    - git push origin develop;
    - git checkout master;
    - git merge develop;
    - git push origin master;

    # checkout the master branch, merge develop and push
    - cd $CURRENT_DIR;

    # launch the tests
    - sh ./.artenolis/runtests.sh;

after_success:

    # submit coverage report
    - if [[ "$MATLAB_VER" == "R2018b" && "$ARCH" == "Linux" ]]; then
      bash <(curl -s https://codecov.io/bash) -f "!*.lst";
      fi

    # deploy the documentation
    - if [[ "$MATLAB_VER" == "R2018b" && "$JENKINS_PULL_REQUEST" != "True" ]]; then
      export PATH="/home/jenkins/.local/bin":$PATH;
      cd $CURRENT_DIR;
      pip install --upgrade --user -r docs/requirements.txt;
      python -c "from documenter.deploy import Documentation; doc = Documentation('github.com/opencobra/MATLAB.devTools', ci='jenkins'); doc.deploy()";
      fi

after_script:

    # reset the fork
    - cd $ARTENOLIS_DATA_PATH/repos/fork-MATLAB.devTools.CI;
    - git reset --hard origin/develop;
